/* @font-face {
    font-family: 'Super Adorable';
    src: url('./font/Super Adorable.ttf') format('truetype');
    rex

} */
/* 
RGBA Colors
RGBA color values are an extension of RGB color values with an alpha channel - which specifies the opacity for a color.

An RGBA color value is specified with: rgba(red, green, blue, alpha). The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (fully opaque). */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    /* border: black 1px solid; */
}


body {
    font-family: "Irish Grover", system-ui;
    font-weight: 400;
    font-style: normal;
    color: #ffffff;
    font-size: 1.25em;
    text-align: center;
    background-color: #404040;

}

h1 {
    font-size: 3em;
    margin-bottom: 1rem;
    padding: 0;
    letter-spacing: 8px;

}

h2 {
    margin: 20px;
    padding: 0.5em;
}



.oignion {
    position: absolute;
    top: 0;
    left: 0;
    margin-bottom: 50px;
}



h3 {
    margin: 20px;
    font-size: 2em;
    padding: 0.5em;
}

.hero-section {
    padding: 2rem;
    position: relative;
    background-image: linear-gradient(250deg, rgba(64, 64, 64, 0.5), #b92823);
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.hero-text {
    text-align: left;
    padding-left: 3rem;
}

.hero-images {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 1rem;
}

.burger {
    width: 500px;
    height: auto;
    z-index: 3;
    max-width: 100%;
}

.oignion-sous-le-burger {
    transform: scaleX(-1);
    order: 3;
    align-self: flex-end;
    margin-top: -132px;
    margin-right: 30px;


}

.map-section {
    background-color: #d86525;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
}



ul {
    list-style-type: none;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 5%;

}



.about-section {

    color: #404040;
    background-color: #f4e4b8;
    display: flex;
    justify-content: space-around;
    flex-direction: row;
    align-items: center;
    gap: 5%;

}

p {
    margin-left: 0;
    margin: 20px;
    padding: 0.5em;
    line-height: 1.5;
    display: block;
    margin-inline-start: 40px;
    text-align: left;
}

.about-section h2 {
    font-size: 2em;
    margin: 20px;
    padding: 0.5em;
}


/* medias queries */


/* Small devices (portrait tablets and large phones, 600px and up) */
@media only screen and (max-width: 600px) {
    .responsive-iframe {
        width: 300px;
        height: 225px;
        max-width: 100%;
    }


    ul li img {
        width: 70px;
    }

    img {
        width: 150px;
        max-width: 100%;
        height: auto;
    }

    .burger {
        width: 250px;
        max-width: 100%;
    }

    .oignion-sous-le-burger {
        margin-top: -71px;
    }

    h1 {
        font-size: 2.5em;
        letter-spacing: 6px;
    }

    h2,
    h3 {
        font-size: 1.8em;

    }

    .hero-text p {
        font-size: 1.8em;
        text-align: center;
    }
}

@media only screen and (max-width: 395px) {

    .oignion{
        display: none;
    }
}

/* Medium devices (landscape tablets, 768px and up) */
@media only screen and (min-width: 768px) {}

/* Large devices (laptops/desktops, 992px and up) */
@media only screen and (min-width: 992px) {}

/* Extra large devices (large laptops and desktops, 1200px and down) */
@media only screen and (max-width: 1200px) {

    h1 {
        text-align: center;
        margin-top: 47px;
    }
}

/* Responsive layout - makes a one column layout instead of a two-column layout */
@media (max-width: 1200px) {
    body {

        font-size: 1em;
    }

    .hero-section {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .hero-images {

        flex-direction: column;
        align-items: center;
    }

    .about-section {

        flex-direction: column;
        align-items: center;
    }

    /* ul {

        flex-direction: column;
        gap: 30px;

    } */



    h1,
    h2,
    h3 {
        font-size: 1.2em;
        display: block;
        letter-spacing: normal;
        margin: 10px 0;
    }
}


/* Responsive layout - makes a one column layout instead of a two-column layout */
@media (max-width: 800px) {}

/* 
flex-direction : row-reverse;
justify-content : center;
align-items: flex-end; */
/* 
#pond {
  display: flex;
}

.yellow {
order: 2;
} */

/* #pond {
  display: flex;
}

.red {
order: -3;
} */


/* align-self. Cette propriété accepte les mêmes valeurs que align-items, mais s'applique seulement à l'élément ciblé.

#pond {
  display: flex;
  align-items: flex-start;
}

.yellow {
align-self: flex-end ;
} */


/* Aligne un élément flex selon l'axe transversal, outrepassant la valeur de align-items.

flex-start flex-end center baseline stretch */
/* 
#pond {
  display: flex;
  align-items: flex-start;
}

.yellow {
order: 2;
align-self: flex-end;
} */

/* nowrap : Tous les éléments sont tenus sur une seule ligne. wrap : Les éléments s'enveloppent sur plusieurs lignes au besoin.
 wrap-reverse : Les éléments s'enveloppent sur plusieurs lignes dans l' ordre inversé. */

/* Flexbox Froggy
Les deux propriétés flex-direction et flex-wrap sont utilisées tellement souvent ensembles que le raccourci flex-flow a été créé pour les combiner. Ce raccourci accepte les valeurs des deux propriétés séparées par un espace.

Par exemple, vous pouvez utiliser flex-flow: row wrap pour configurer les colonnes et les faire s'envelopper.

Essayez d'utiliser flex-flow pour répéter le niveau précédent.

#pond {
  display: flex;
flex-flow: column wrap;
} */


/* Les grenouilles sont éparpillées partout dans l'étang, mais les nénuphars sont amassés dans le haut. Vous pouvez utiliser align-content pour définir comment plusieurs lignes sont espacées de l'une à l'autre. Cette propriété prend les valeurs suivantes :

flex-start : Les lignes sont amassées dans le haut du conteneur.
flex-end: Les lignes sont amassées dans le bas du conteneur.
center : Les lignes sont amassées dans le centre vertical du conteneur.
space-between : Les lignes s'affichent avec un espace égal entre eux.
space-around : Les lignes s'affichent avec un espace égal autour d'eux.
stretch : Les lignes sont étirées pour s'adapter au conteneur.
Ceci peut être déroutant, mais align-content détermine l'espace entre les lignes, alors que align-items détermine comment les éléments dans leur ensemble sont alignées à l'intérieur du conteneur. Quand il n'y a qu'une seule ligne, align-content n'a aucun effet. */

/* Flexbox Froggy
Ramenez les grenouilles à la maison une dernière fois en utilisant les propriétés CSS que vous avez apprises :


#pond {
  display: flex;
justify-content: center;
flex-flow: column-reverse wrap-reverse;
align-content: space-between;

} */